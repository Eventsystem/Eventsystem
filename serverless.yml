service: 
  name: BusinessEvents-SubscriptionEngine 
  awsKmsKeyArn: arn:aws:kms:ap-southeast-2::key/subscription-system
provider:
  name: aws
  runtime: dotnetcore1.1
  stage: v1
  region: ap-southeast-2
  deploymentBucket: serverless.${self:provider.region}.deploys
  iamRoleStatements:
    - Effect: "Allow"
      Resource: "*"
      Action:
        - "sns:*"
        - "logs:CreateLogGroup"
        - "logs:CreateLogStream"
        - "logs:PutLogEvents"
        - "logs:DescribeLogGroups"
        - "logs:DescribeLogStreams"
        - "s3:PutObject"
        - "s3:GetObject"
        - "s3:CreateBucket"
        - "s3:PutBucket"

package:
  artifact: src/BusinessEvents.SubscriptionEngine.Handlers/bin/release/netcoreapp1.1/publish/deploy-package.zip

functions:
  handle:
    handler: BusinessEvents.SubscriptionEngine.Handlers::BusinessEvents.SubscriptionEngine.Handlers.Handler::Handle
    awsKmsKeyArn: arn:aws:kms:ap-southeast-2::key/subscription-system
    events:
      - sns: BusinessEvents
    environment:
      AUTH_CLIENT_ID: clientId
      AUTH_ENDPOINT: endpoint
      AUTH_CLIENT_SECRET: somesecret
  healthcheck:
    handler: BusinessEvents.SubscriptionEngine.Handlers::BusinessEvents.SubscriptionEngine.Handlers.Handler::HealthCheck
    events:
      - http:
          path: healthcheck
          method: get
          cors: true  